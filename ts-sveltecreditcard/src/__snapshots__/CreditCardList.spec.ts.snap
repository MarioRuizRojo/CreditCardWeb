// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`check constructor 2 cards in list of cards 1`] = `
Object {
  "component": CreditCardList {
    "$$": Object {
      "after_update": Array [],
      "before_update": Array [],
      "bound": Object {},
      "callbacks": Object {},
      "context": Map {},
      "ctx": Array [
        Array [
          CreditCardC {
            "cardNumber": "1234561234567890",
            "creationDate": undefined,
            "cvv": "123",
            "expirationDate": "11/11",
            "holderName": "holderName",
            "updateDate": undefined,
          },
          CreditCardC {
            "cardNumber": "1234567890123456",
            "creationDate": undefined,
            "cvv": "321",
            "expirationDate": "01/01",
            "holderName": "holderName2",
            "updateDate": undefined,
          },
        ],
        [Function],
        [Function],
        [Function],
        [Function],
        [Function],
      ],
      "dirty": Array [
        -1,
      ],
      "fragment": Object {
        "c": [Function],
        "d": [Function],
        "i": [Function],
        "l": [Function],
        "m": [Function],
        "o": [Function],
        "p": [Function],
      },
      "not_equal": [Function],
      "on_destroy": Array [
        [Function],
        [Function],
      ],
      "on_disconnect": Array [],
      "on_mount": Array [],
      "props": Object {},
      "skip_bound": false,
      "update": [Function],
    },
    "$capture_state": [Function],
    "$inject_state": [Function],
  },
  "container": <body>
    <div>
      <div
        class="card"
      >
        <div
          class="card-body"
        >
          <h5
            class="title svelte-180ga2g"
          >
            Credit Cards
          </h5>
           
          <table
            class="table"
          >
            <tbody>
              <tr>
                <td>
                  holderName
                </td>
                 
                <td>
                  1234561234567890
                </td>
                 
                <td>
                  11/11
                </td>
                 
                <td>
                  <i
                    class="far fa-edit text-info"
                    data-testid="edit0"
                  />
                   
                  <i
                    class="far fa-trash-alt text-danger"
                    data-testid="delete0"
                  />
                </td>
                 
              </tr>
              <tr>
                <td>
                  holderName2
                </td>
                 
                <td>
                  1234567890123456
                </td>
                 
                <td>
                  01/01
                </td>
                 
                <td>
                  <i
                    class="far fa-edit text-info"
                    data-testid="edit1"
                  />
                   
                  <i
                    class="far fa-trash-alt text-danger"
                    data-testid="delete1"
                  />
                </td>
                 
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </body>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`check constructor empty card list 1`] = `
Object {
  "component": CreditCardList {
    "$$": Object {
      "after_update": Array [],
      "before_update": Array [],
      "bound": Object {},
      "callbacks": Object {},
      "context": Map {},
      "ctx": Array [
        Array [],
        [Function],
        [Function],
        [Function],
        [Function],
        [Function],
      ],
      "dirty": Array [
        -1,
      ],
      "fragment": Object {
        "c": [Function],
        "d": [Function],
        "i": [Function],
        "l": [Function],
        "m": [Function],
        "o": [Function],
        "p": [Function],
      },
      "not_equal": [Function],
      "on_destroy": Array [
        [Function],
        [Function],
      ],
      "on_disconnect": Array [],
      "on_mount": Array [],
      "props": Object {},
      "skip_bound": false,
      "update": [Function],
    },
    "$capture_state": [Function],
    "$inject_state": [Function],
  },
  "container": <body>
    <div>
      <div
        class="card"
      >
        <div
          class="card-body"
        >
          <h5
            class="title svelte-180ga2g"
          >
            Credit Cards
          </h5>
           
          <table
            class="table"
          >
            <tbody />
          </table>
        </div>
      </div>
    </div>
  </body>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`check if onClick delete removes one credit card from the list of 2 cards 1`] = `
Object {
  "component": CreditCardList {
    "$$": Object {
      "after_update": Array [],
      "before_update": Array [],
      "bound": Object {},
      "callbacks": Object {},
      "context": Map {},
      "ctx": Array [
        Array [
          CreditCardC {
            "cardNumber": "1234561234567890",
            "creationDate": undefined,
            "cvv": "123",
            "expirationDate": "11/11",
            "holderName": "holderName",
            "updateDate": undefined,
          },
        ],
        [Function],
        [Function],
        [Function],
        [Function],
        [Function],
      ],
      "dirty": Array [
        1,
      ],
      "fragment": Object {
        "c": [Function],
        "d": [Function],
        "i": [Function],
        "l": [Function],
        "m": [Function],
        "o": [Function],
        "p": [Function],
      },
      "not_equal": [Function],
      "on_destroy": Array [
        [Function],
        [Function],
      ],
      "on_disconnect": Array [],
      "on_mount": Array [],
      "props": Object {},
      "skip_bound": false,
      "update": [Function],
    },
    "$capture_state": [Function],
    "$inject_state": [Function],
  },
  "container": <body>
    <div>
      <div
        class="card"
      >
        <div
          class="card-body"
        >
          <h5
            class="title svelte-180ga2g"
          >
            Credit Cards
          </h5>
           
          <table
            class="table"
          >
            <tbody>
              <tr>
                <td>
                  holderName
                </td>
                 
                <td>
                  1234561234567890
                </td>
                 
                <td>
                  11/11
                </td>
                 
                <td>
                  <i
                    class="far fa-edit text-info"
                    data-testid="edit0"
                  />
                   
                  <i
                    class="far fa-trash-alt text-danger"
                    data-testid="delete0"
                  />
                </td>
                 
              </tr>
              <tr>
                <td>
                  holderName2
                </td>
                 
                <td>
                  1234567890123456
                </td>
                 
                <td>
                  01/01
                </td>
                 
                <td>
                  <i
                    class="far fa-edit text-info"
                    data-testid="edit1"
                  />
                   
                  <i
                    class="far fa-trash-alt text-danger"
                    data-testid="delete1"
                  />
                </td>
                 
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </body>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`check if subscribe triggers the rendering of the new cards list 1`] = `
Object {
  "component": CreditCardList {
    "$$": Object {
      "after_update": Array [],
      "before_update": Array [],
      "bound": Object {},
      "callbacks": Object {},
      "context": Map {},
      "ctx": Array [
        Array [
          CreditCardC {
            "cardNumber": "1234561234567890",
            "creationDate": undefined,
            "cvv": "123",
            "expirationDate": "11/11",
            "holderName": "holderName",
            "updateDate": undefined,
          },
        ],
        [Function],
        [Function],
        [Function],
        [Function],
        [Function],
      ],
      "dirty": Array [
        -1,
      ],
      "fragment": Object {
        "c": [Function],
        "d": [Function],
        "i": [Function],
        "l": [Function],
        "m": [Function],
        "o": [Function],
        "p": [Function],
      },
      "not_equal": [Function],
      "on_destroy": Array [
        [Function],
        [Function],
      ],
      "on_disconnect": Array [],
      "on_mount": Array [],
      "props": Object {},
      "skip_bound": false,
      "update": [Function],
    },
    "$capture_state": [Function],
    "$inject_state": [Function],
  },
  "container": <body>
    <div>
      <div
        class="card"
      >
        <div
          class="card-body"
        >
          <h5
            class="title svelte-180ga2g"
          >
            Credit Cards
          </h5>
           
          <table
            class="table"
          >
            <tbody>
              <tr>
                <td>
                  holderName
                </td>
                 
                <td>
                  1234561234567890
                </td>
                 
                <td>
                  11/11
                </td>
                 
                <td>
                  <i
                    class="far fa-edit text-info"
                    data-testid="edit0"
                  />
                   
                  <i
                    class="far fa-trash-alt text-danger"
                    data-testid="delete0"
                  />
                </td>
                 
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </body>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
